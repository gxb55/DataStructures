树（tree）大体上分为
二叉树：
    涉及到二叉树的便利，层高，其中二叉树包含 bst 即binarysortTree 二叉排序树，avl 二叉平衡排序树，由于bst树容易退化成链表，所以引入了avl树，在增加节点的时候会旋转以此来保证书的平衡，如何算是平衡
    即根节点的左右字数相差的绝对值不超过1，在左旋或者右旋的时候可能会进行二次旋转，在左旋的时候是右子树过长，右子树过长右子树的两个左右子树要保证左子树小于右子树，否则就要将其右旋；
多叉树：
    b树：b树其实就是多叉树中的一个，b树保证所有的叶子节点在同一层，b树是分阶的，树的最大子树就是树的阶；树中每个节点都会有值，即数值分布在树的任何节点上面，适合做文件系统的索引，查找效率高
    b+树：一般用于数据的索引，所有的数值都存放在叶子节点上面，非叶子节点不存放数据，仅提供索引查询的功能，同时在叶子节点上面相邻叶子节点会有指针指向形成顺序链表的样式，用来查询销量比较高切范围查询更好，b+树在解决
    查询效率的同时兼顾了范围查询。
    b*树：在b+树的基础上面非叶子节点也会形成链表格式，块的利用率会更高。
